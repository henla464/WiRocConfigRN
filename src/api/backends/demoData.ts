import {GettablePropName} from '@api/transformers';

export const demoData: Readonly<Partial<Record<GettablePropName, string>>> = {
  loramode: 'RECEIVER',
  channel: '2',
  lorarange: 'L',
  onewayreceive: '0',
  force4800baudrate: '0',
  sendtosirapenabled: '0',
  sendtosirapip: '',
  sendtosirapipport: '10000',
  rs232mode: 'RECEIVE',
  rs232onewayreceive: '0',
  forcers2324800baudrate: '0',
  'srr/enabled': '0',
  'srr/mode': 'RECEIVE',
  'srr/redchannel': '1',
  'srr/bluechannel': '1',
  'srr/redchannellistenonly': '0',
  'srr/bluechannellistenonly': '0',
  ischarging: '1',
  batterylevel: '35',
  wirocdevicename: 'Demo Device',
  scanbtaddresses: JSON.stringify([
    {
      'py/object': 'init.MicroMock',
      BTAddress: 'B8:BC:5B:90:A3:A5',
      Name: '[TV] Samsung Q60 Series (55)',
      Found: 'False',
      Status: 'NotConnected',
    },
  ]),
  listwifi:
    'LasePrivate\nno\n72\nDIRECT-2c-HP M15 LaserJet\nno\n60\nTP-Link_F2EB\nno\n55\nWiRoc\nyes\n52\nGhostbusters\nno\n37',
  'hashw/srr': '1',
  'hashw/rtc': '1',
  services: JSON.stringify({
    services: [
      {
        Name: 'WiRocPython',
        Status: 'active',
      },
      {
        Name: 'WiRocPythonWS',
        Status: 'active',
      },
      {
        Name: 'WiRocWatchDog',
        Status: 'active',
      },
    ],
  }),
  status: JSON.stringify({
    inputAdapters: [
      {
        TypeName: 'STATUS',
        InstanceName: 'status1',
      },
      {
        TypeName: 'LORA',
        InstanceName: 'reclora1',
      },
      {
        TypeName: 'SI',
        InstanceName: 'sibtsp1',
      },
      {
        TypeName: 'SITEST',
        InstanceName: 'test1',
      },
      {
        TypeName: 'REPEATER',
        InstanceName: 'rcvRepeater1',
      },
    ],
    subscriberAdapters: [
      {
        TypeName: 'LORA',
        InstanceName: 'sndlora1',
        MessageInSubTypeName: 'SIMessage',
        Enabled: false,
        MessageInName: 'SI',
        MessageOutName: 'LORA',
        MessageOutSubTypeName: 'Punch',
      },
      {
        TypeName: 'LORA',
        InstanceName: 'sndlora1',
        MessageInSubTypeName: 'SRRMessage',
        Enabled: false,
        MessageInName: 'SRR',
        MessageOutName: 'LORA',
        MessageOutSubTypeName: 'Punch',
      },
      {
        TypeName: 'LORA',
        InstanceName: 'sndlora1',
        MessageInSubTypeName: 'Test',
        Enabled: false,
        MessageInName: 'SITEST',
        MessageOutName: 'LORA',
        MessageOutSubTypeName: 'Punch',
      },
      {
        TypeName: 'LORA',
        InstanceName: 'sndlora1',
        MessageInSubTypeName: 'Status',
        Enabled: false,
        MessageInName: 'STATUS',
        MessageOutName: 'LORA',
        MessageOutSubTypeName: 'Status',
      },
      {
        TypeName: 'LORA',
        InstanceName: 'sndlora1',
        MessageInSubTypeName: 'SIMessage',
        Enabled: false,
        MessageInName: 'REPEATER',
        MessageOutName: 'LORA',
        MessageOutSubTypeName: 'Ack',
      },
      {
        TypeName: 'LORA',
        InstanceName: 'sndlora1',
        MessageInSubTypeName: 'SIMessageDouble',
        Enabled: true,
        MessageInName: 'REPEATER',
        MessageOutName: 'LORA',
        MessageOutSubTypeName: 'Ack',
      },
      {
        TypeName: 'LORA',
        InstanceName: 'sndlora1',
        MessageInSubTypeName: 'SIMessage',
        Enabled: false,
        MessageInName: 'REPEATER',
        MessageOutName: 'LORA',
        MessageOutSubTypeName: 'Punch',
      },
      {
        TypeName: 'LORA',
        InstanceName: 'sndlora1',
        MessageInSubTypeName: 'SIMessageDouble',
        Enabled: true,
        MessageInName: 'REPEATER',
        MessageOutName: 'LORA',
        MessageOutSubTypeName: 'Punch',
      },
      {
        TypeName: 'LORA',
        InstanceName: 'sndlora1',
        MessageInSubTypeName: 'Status',
        Enabled: false,
        MessageInName: 'REPEATER',
        MessageOutName: 'LORA',
        MessageOutSubTypeName: 'Status',
      },
      {
        TypeName: 'LORA',
        InstanceName: 'sndlora1',
        MessageInSubTypeName: 'SIMessage',
        Enabled: true,
        MessageInName: 'LORA',
        MessageOutName: 'LORA',
        MessageOutSubTypeName: 'Ack',
      },
      {
        TypeName: 'BLENO',
        InstanceName: 'bleno1',
        MessageInSubTypeName: 'SIMessage',
        Enabled: false,
        MessageInName: 'SI',
        MessageOutName: 'SI',
        MessageOutSubTypeName: 'Punch',
      },
      {
        TypeName: 'BLENO',
        InstanceName: 'bleno1',
        MessageInSubTypeName: 'SIMessage',
        Enabled: false,
        MessageInName: 'LORA',
        MessageOutName: 'SI',
        MessageOutSubTypeName: 'Punch',
      },
      {
        TypeName: 'BLENO',
        InstanceName: 'bleno1',
        MessageInSubTypeName: 'SIMessageDouble',
        Enabled: false,
        MessageInName: 'LORA',
        MessageOutName: 'SI',
        MessageOutSubTypeName: 'Punch',
      },
      {
        TypeName: 'BLENO',
        InstanceName: 'bleno1',
        MessageInSubTypeName: 'SRRMessage',
        Enabled: false,
        MessageInName: 'SRR',
        MessageOutName: 'SI',
        MessageOutSubTypeName: 'Punch',
      },
      {
        TypeName: 'BLENO',
        InstanceName: 'bleno1',
        MessageInSubTypeName: 'Test',
        Enabled: false,
        MessageInName: 'SITEST',
        MessageOutName: 'SI',
        MessageOutSubTypeName: 'Punch',
      },
      {
        TypeName: 'SIRAP',
        InstanceName: 'sirap1',
        MessageInSubTypeName: 'SIMessage',
        Enabled: false,
        MessageInName: 'LORA',
        MessageOutName: 'SIRAP',
        MessageOutSubTypeName: 'Punch',
      },
      {
        TypeName: 'SIRAP',
        InstanceName: 'sirap1',
        MessageInSubTypeName: 'SIMessage',
        Enabled: false,
        MessageInName: 'SI',
        MessageOutName: 'SIRAP',
        MessageOutSubTypeName: 'Punch',
      },
      {
        TypeName: 'SIRAP',
        InstanceName: 'sirap1',
        MessageInSubTypeName: 'Test',
        Enabled: false,
        MessageInName: 'SITEST',
        MessageOutName: 'SIRAP',
        MessageOutSubTypeName: 'Punch',
      },
      {
        TypeName: 'SIRAP',
        InstanceName: 'sirap1',
        MessageInSubTypeName: 'SIMessageDouble',
        Enabled: false,
        MessageInName: 'LORA',
        MessageOutName: 'SIRAP',
        MessageOutSubTypeName: 'Punch',
      },
      {
        TypeName: 'SIRAP',
        InstanceName: 'sirap1',
        MessageInSubTypeName: 'SRRMessage',
        Enabled: false,
        MessageInName: 'SRR',
        MessageOutName: 'SIRAP',
        MessageOutSubTypeName: 'Punch',
      },
      {
        TypeName: 'STATUS',
        InstanceName: 'status1',
        MessageInSubTypeName: 'Status',
        Enabled: true,
        MessageInName: 'LORA',
        MessageOutName: 'STATUS',
        MessageOutSubTypeName: 'Status',
      },
      {
        TypeName: 'STATUS',
        InstanceName: 'status1',
        MessageInSubTypeName: 'Status',
        Enabled: true,
        MessageInName: 'STATUS',
        MessageOutName: 'STATUS',
        MessageOutSubTypeName: 'Status',
      },
    ],
  }),
  settings: JSON.stringify({
    settings: [
      {
        Key: 'PowerCycle',
        Value: '41',
      },
      {
        Key: 'ReceiveSIAdapterActive',
        Value: '0',
      },
      {
        Key: 'Channel',
        Value: '2',
      },
      {
        Key: 'AcknowledgementRequested',
        Value: '1',
      },
      {
        Key: 'LoraMode',
        Value: 'RECEIVER',
      },
      {
        Key: 'LoraRange',
        Value: 'L',
      },
      {
        Key: 'SendToSirapEnabled',
        Value: '0',
      },
      {
        Key: 'SendSerialAdapterActive',
        Value: '0',
      },
      {
        Key: 'SendToSirapIPPort',
        Value: '10000',
      },
      {
        Key: 'RS232Mode',
        Value: 'RECEIVE',
      },
      {
        Key: 'SendStatusMessages',
        Value: '1',
      },
      {
        Key: 'LoraPower',
        Value: '22',
      },
      {
        Key: 'CodeRate',
        Value: '0',
      },
      {
        Key: 'RxGainEnabled',
        Value: '1',
      },
      {
        Key: 'SendToBlenoEnabled',
        Value: '0',
      },
      {
        Key: 'WebServerUrl',
        Value: 'https://monitor.wiroc.se',
      },
      {
        Key: 'LogToServer',
        Value: '0',
      },
      {
        Key: 'StatusMessageBaseInterval',
        Value: '300',
      },
      {
        Key: 'LoggingServerHost',
        Value: '',
      },
      {
        Key: 'LoggingServerPort',
        Value: '3000',
      },
      {
        Key: 'SimulatedMessageDropPercentageRepeaterNotRequested',
        Value: '0',
      },
      {
        Key: 'SettingUpdatedByWebService',
        Value: '0',
      },
      {
        Key: 'ShouldAlwaysRequestRepeater',
        Value: '0',
      },
      {
        Key: 'SRREnabled',
        Value: '1',
      },
      {
        Key: 'BTSerialOneWayReceive',
        Value: '1',
      },
      {
        Key: 'ForceRS2324800BaudRate',
        Value: '0',
      },
    ],
  }),
  btserialonewayreceive: '1',
  ip: '192.168.1.115',
  'rtc/wakeupenabled': '0',
  wirocbleapiversion: '0.14',
  wirochwversion: 'v7Rev1',
  wirocpythonversion: '0.210',
  'rtc/datetime': '2024-01-01 10:10:00',
  'rtc/wakeup': '10:15',
  power: '22',
  coderate: '0',
  'lora/enabled': '1',
};
